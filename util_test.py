# -*- coding: utf-8 -*-
"""
Created on Fri May 22 15:29:38 2015

@author: Richard Sheridan
"""
import numpy as np
from util import schultz_zimm, sumkd, meankd, lattice_parameters

def lattice_parameters_test():
    result = lattice_parameters(.0282, 104, .25, 2.33333333333333)
    data = 1.4177993142857144, 589.8045147428572
    assert np.allclose(result, data)

def sumkd_test():
    result = sumkd(np.arange(4,dtype=float).reshape(2,2))
    data = np.array([[6.]])
    assert np.allclose(result, data, atol=1e-14)
    result = sumkd(np.arange(4,dtype=float).reshape(2,2), 1)
    data = np.array([[1.],
       [5.]])
    assert np.allclose(result, data, atol=1e-14)
    result = sumkd(np.arange(4,dtype=float).reshape(2,2), 0)
    data = np.array([[2., 4.]])
    assert np.allclose(result, data, atol=1e-14)


def meankd_test():
    result = meankd(np.arange(4,dtype=float).reshape(2,2))
    data = np.array([[1.5]])
    assert np.allclose(result, data, atol=1e-14)
    result = meankd(np.arange(4,dtype=float).reshape(2,2), 1)
    data = np.array([[ 0.5],
       [ 2.5]])
    assert np.allclose(result, data, atol=1e-14)
    result = meankd(np.arange(4,dtype=float).reshape(2,2), 0)
    data = np.array([[ 1.,  2.]])
    assert np.allclose(result, data, atol=1e-14)

def schultz_zimm_test():

    # uniform
    pdi=1
    nn=100
    data = np.array(((
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.)))
    assert np.allclose(schultz_zimm(pdi,nn), data, atol=1e-14)

    # too narrow
    pdi=1.0000000001
    nn=100
    assert np.allclose(schultz_zimm(pdi,nn), data, atol=1e-14)

    # broad
    pdi=2
    nn=30
    data = np.array([  3.27848972e-02,   3.17100805e-02,   3.06705004e-02,
         2.96650018e-02,   2.86924673e-02,   2.77518164e-02,
         2.68420036e-02,   2.59620181e-02,   2.51108819e-02,
         2.42876492e-02,   2.34914054e-02,   2.27212655e-02,
         2.19763738e-02,   2.12559026e-02,   2.05590512e-02,
         1.98850454e-02,   1.92331360e-02,   1.86025988e-02,
         1.79927331e-02,   1.74028611e-02,   1.68323275e-02,
         1.62804982e-02,   1.57467599e-02,   1.52305197e-02,
         1.47312039e-02,   1.42482576e-02,   1.37811442e-02,
         1.33293445e-02,   1.28923566e-02,   1.24696949e-02,
         1.20608897e-02,   1.16654867e-02,   1.12830465e-02,
         1.09131443e-02,   1.05553688e-02,   1.02093227e-02,
         9.87462129e-03,   9.55089270e-03,   9.23777719e-03,
         8.93492683e-03,   8.64200509e-03,   8.35868646e-03,
         8.08465612e-03,   7.81960957e-03,   7.56325228e-03,
         7.31529937e-03,   7.07547533e-03,   6.84351366e-03,
         6.61915660e-03,   6.40215483e-03,   6.19226723e-03,
         5.98926056e-03,   5.79290925e-03,   5.60299509e-03,
         5.41930706e-03,   5.24164105e-03,   5.06979961e-03,
         4.90359181e-03,   4.74283295e-03,   4.58734439e-03,
         4.43695335e-03,   4.29149272e-03,   4.15080086e-03,
         4.01472142e-03,   3.88310319e-03,   3.75579993e-03,
         3.63267016e-03,   3.51357707e-03,   3.39838831e-03,
         3.28697589e-03,   3.17921600e-03,   3.07498890e-03,
         2.97417878e-03,   2.87667360e-03,   2.78236502e-03,
         2.69114825e-03,   2.60292191e-03,   2.51758798e-03,
         2.43505163e-03,   2.35522114e-03,   2.27800781e-03,
         2.20332583e-03,   2.13109222e-03,   2.06122670e-03,
         1.99365165e-03,   1.92829198e-03,   1.86507505e-03,
         1.80393062e-03,   1.74479074e-03,   1.68758969e-03,
         1.63226392e-03,   1.57875194e-03,   1.52699430e-03,
         1.47693347e-03,   1.42851383e-03,   1.38168158e-03,
         1.33638467e-03,   1.29257277e-03,   1.25019719e-03,
         1.20921085e-03,   1.16956821e-03,   1.13122520e-03,
         1.09413923e-03,   1.05826908e-03,   1.02357489e-03,
         9.90018113e-04,   9.57561458e-04,   9.26168860e-04,
         8.95805433e-04,   8.66437437e-04,   8.38032240e-04,
         8.10558275e-04,   7.83985014e-04,   7.58282928e-04,
         7.33423457e-04,   7.09378976e-04,   6.86122767e-04,
         6.63628987e-04,   6.41872641e-04,   6.20829553e-04,
         6.00476339e-04,   5.80790383e-04,   5.61749809e-04,
         5.43333460e-04,   5.25520871e-04,   5.08292247e-04,
         4.91628445e-04,   4.75510948e-04,   4.59921844e-04,
         4.44843813e-04,   4.30260098e-04,   4.16154494e-04,
         4.02511327e-04,   3.89315436e-04,   3.76552158e-04,
         3.64207310e-04,   3.52267174e-04,   3.40718482e-04,
         3.29548402e-04,   3.18744520e-04,   3.08294832e-04,
         2.98187725e-04,   2.88411969e-04,   2.78956700e-04,
         2.69811411e-04,   2.60965941e-04,   2.52410460e-04,
         2.44135461e-04,   2.36131748e-04,   2.28390429e-04,
         2.20902900e-04,   2.13660842e-04,   2.06656206e-04,
         1.99881210e-04,   1.93328324e-04,   1.86990268e-04,
         1.80859998e-04,   1.74930702e-04,   1.69195791e-04,
         1.63648893e-04,   1.58283844e-04,   1.53094683e-04,
         1.48075642e-04,   1.43221145e-04,   1.38525797e-04,
         1.33984382e-04,   1.29591851e-04,   1.25343325e-04,
         1.21234082e-04,   1.17259556e-04,   1.13415331e-04,
         1.09697134e-04,   1.06100834e-04,   1.02622435e-04,
         9.92580712e-05,   9.60040046e-05,   9.28566190e-05,
         8.98124169e-05,   8.68680156e-05,   8.40201433e-05,
         8.12656354e-05,   7.86014310e-05,   7.60245696e-05,
         7.35321877e-05,   7.11215159e-05,   6.87898752e-05,
         6.65346749e-05,   6.43534088e-05,   6.22436531e-05,
         6.02030634e-05,   5.82293722e-05,   5.63203864e-05,
         5.44739845e-05,   5.26881148e-05,   5.09607930e-05,
         4.92900995e-05,   4.76741778e-05,   4.61112323e-05,
         4.45995263e-05,   4.31373799e-05,   4.17231684e-05,
         4.03553202e-05,   3.90323155e-05,   3.77526840e-05,
         3.65150038e-05,   3.53178996e-05,   3.41600411e-05,
         3.30401417e-05,   3.19569570e-05,   3.09092834e-05,
         2.98959565e-05,   2.89158505e-05,   2.79678762e-05,
         2.70509801e-05,   2.61641435e-05,   2.53063809e-05,
         2.44767390e-05,   2.36742961e-05,   2.28981603e-05,
         2.21474693e-05,   2.14213889e-05,   2.07191123e-05,
         2.00398590e-05,   1.93828742e-05,   1.87474280e-05,
         1.81328142e-05,   1.75383499e-05,   1.69633744e-05,
         1.64072488e-05,   1.58693552e-05,   1.53490959e-05,
         1.48458927e-05,   1.43591864e-05,   1.38884363e-05,
         1.34331192e-05,   1.29927292e-05,   1.25667768e-05,
         1.21547889e-05,   1.17563075e-05,   1.13708899e-05,
         1.09981078e-05,   1.06375469e-05,   1.02888067e-05,
         9.95149945e-06,   9.62525049e-06,   9.30969725e-06,
         9.00448907e-06,   8.70928680e-06,   8.42376242e-06,
         8.14759864e-06,   7.88048858e-06,   7.62213544e-06,
         7.37225212e-06,   7.13056094e-06,   6.89679335e-06,
         6.67068957e-06,   6.45199835e-06,   6.24047669e-06,
         6.03588953e-06,   5.83800953e-06,   5.64661681e-06,
         5.46149870e-06,   5.28244947e-06,   5.10927018e-06,
         4.94176838e-06,   4.77975794e-06,   4.62305884e-06,
         4.47149694e-06,   4.32490383e-06,   4.18311662e-06,
         4.04597775e-06,   3.91333482e-06,   3.78504044e-06,
         3.66095206e-06,   3.54093177e-06,   3.42484622e-06,
         3.31256641e-06,   3.20396756e-06,   3.09892901e-06,
         2.99733403e-06,   2.89906974e-06,   2.80402693e-06,
         2.71209999e-06,   2.62318678e-06,   2.53718848e-06,
         2.45400955e-06,   2.37355755e-06,   2.29574308e-06,
         2.22047967e-06,   2.14768368e-06,   2.07727424e-06,
         2.00917309e-06,   1.94330456e-06,   1.87959546e-06,
         1.81797499e-06,   1.75837468e-06,   1.70072830e-06,
         1.64497180e-06,   1.59104321e-06,   1.53888260e-06,
         1.48843203e-06,   1.43963543e-06,   1.39243856e-06,
         1.34678900e-06,   1.30263600e-06,   1.25993051e-06,
         1.21862508e-06,   1.17867380e-06,   1.14003227e-06,
         1.10265757e-06,   1.06650815e-06,   1.03154386e-06])
    result = schultz_zimm(pdi,nn)

    assert np.allclose(result, data, atol=1e-14)

def main():
    schultz_zimm_test()
    sumkd_test()
    meankd_test()
    print('all tests passed')

if __name__ == '__main__':
    main()
